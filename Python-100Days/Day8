#練習1.設計一個電腦時鐘
    # from time import sleep #sleep為延遲功能

    # class Clock(object): #創建類別的方法class 類別名(object)
    #     def __init__(self,hour=0,minute=0,second=0):#設定class的初始屬性前方都要加self.
    #         self.hour = hour
    #         self.minute = minute
    #         self.second = second
        
    #     def run(self): #走動規則
    #         self.second += 1
    #         if self.second == 60:
    #             self.minute += 1
    #             self.second = 0
    #             if self.minute == 60:
    #                 self.hour +=1
    #                 self.minute = 0
    #                 if self.hour == 24:
    #                     self.hour = 0

    #     def show(self): #顯示方式
    #         return '%02d:%02d:%02d' %(self.hour,self.minute,self.second)
    # def main():
    #     clock = Clock(20,59,59)
    #     while True:
    #         print(clock.show())
    #         sleep(1)
    #         clock.run()
    # if __name__ =='__main__':
    #     main()

#練習2.設定一個類別為移動點及計算兩點之間的距離
    # from math import sqrt #載入根號函數

    # class Point(object):
    #     def __init__(self,x=0,y=0):
    #         self.x = x
    #         self.y = y
    #     def move_to(self,x,y):
    #         self.x = x
    #         self.y = y
    #     def move_value(self,dx,dy):
    #         self.x += dx
    #         self.y += dy
    #     def distance(self,other):
    #         dx = self.x - other.x
    #         dy = self.y - other.y
    #         return sqrt(dx ** 2 + dy ** 2)
    #     def __str__(self):
    #         return '(%s,%s)' %(str(self.x),str(self.y))

    # def main():
    #     p1 = Point(3,5) #初始位置
    #     p2 = Point() #初始位置(0,0)自動賦予
    #     print(p1)
    #     print(p2)
    #     p2.move_value(-5,7) #將p2移動(-1,2)
    #     print(p2)
    #     print('%.3f' % p1.distance(p2))
    # if __name__ == '__main__':
    #     main()
